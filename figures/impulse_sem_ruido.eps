%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.10.0.499 (R2010a). Operating System: Linux 2.6.35-22-generic #34-Ubuntu SMP Sun Oct 10 09:24:00 UTC 2010 i686.
%%Title: /media/DATA/personal/mestrado/identificacaoSistemas/trab2/relat/nonParametric/figures/impulse_sem_ruido.eps
%%CreationDate: 10/19/2010  01:23:00
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    81   260   529   532
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    81   260   529   532
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0972 6384 csm

    0     0  5376  3264 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5377 3265 rf
6 w
0 2468 4051 0 0 -2468 814 2905 4 MP
PP
-4051 0 0 2468 4051 0 0 -2468 814 2905 5 MP stroke
4 w
DO
SO
6 w
0.4 sg
 814 2905 mt 4865 2905 L
 814  437 mt 4865  437 L
 814 2905 mt  814  437 L
4865 2905 mt 4865  437 L
 814 2905 mt 4865 2905 L
 814 2905 mt  814  437 L
 814 2905 mt  814 2864 L
 814  437 mt  814  477 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 781 3050 mt 
(0) s
1489 2905 mt 1489 2864 L
1489  437 mt 1489  477 L
1456 3050 mt 
(1) s
2164 2905 mt 2164 2864 L
2164  437 mt 2164  477 L
2131 3050 mt 
(2) s
2839 2905 mt 2839 2864 L
2839  437 mt 2839  477 L
2806 3050 mt 
(3) s
3514 2905 mt 3514 2864 L
3514  437 mt 3514  477 L
3481 3050 mt 
(4) s
4189 2905 mt 4189 2864 L
4189  437 mt 4189  477 L
4156 3050 mt 
(5) s
4865 2905 mt 4865 2864 L
4865  437 mt 4865  477 L
4832 3050 mt 
(6) s
 814 2905 mt  854 2905 L
4865 2905 mt 4824 2905 L
 643 2949 mt 
(-1) s
 814 2493 mt  854 2493 L
4865 2493 mt 4824 2493 L
 543 2537 mt 
(-0.5) s
 814 2082 mt  854 2082 L
4865 2082 mt 4824 2082 L
 713 2126 mt 
(0) s
 814 1671 mt  854 1671 L
4865 1671 mt 4824 1671 L
 613 1715 mt 
(0.5) s
 814 1259 mt  854 1259 L
4865 1259 mt 4824 1259 L
 713 1303 mt 
(1) s
 814  848 mt  854  848 L
4865  848 mt 4824  848 L
 613  892 mt 
(1.5) s
 814  437 mt  854  437 L
4865  437 mt 4824  437 L
 713  481 mt 
(2) s
 814 2905 mt 4865 2905 L
 814  437 mt 4865  437 L
 814 2905 mt  814  437 L
4865 2905 mt 4865  437 L
gs 814 437 4052 2469 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
15 0 35 -1 36 0 35 -1 35 -2 36 -1 35 -2 36 -1 
35 -1 36 -2 35 -1 35 0 36 -1 35 1 36 1 35 1 
36 2 35 2 35 3 36 3 35 3 36 3 35 3 35 2 
36 2 35 1 36 0 35 -1 36 -2 35 -3 35 -4 36 -5 
35 -5 36 -7 35 -6 35 -6 36 -6 35 -4 36 -4 35 -1 
36 0 35 2 35 5 36 6 35 9 36 11 35 12 35 12 
36 13 35 13 36 11 35 9 36 6 35 3 35 -2 36 -6 
35 -10 36 -15 35 -19 35 -23 36 -25 35 -26 36 -27 35 -25 
36 -22 35 -17 35 -11 36 -3 35 5 36 15 35 24 36 33 
35 41 35 48 36 53 35 55 36 54 35 50 35 43 36 32 
35 18 36 3 35 -16 36 -35 35 -55 35 -72 36 -89 35 -102 
36 -110 35 -113 35 -109 36 -100 35 -83 36 -60 35 -29 36 4 
35 43 35 82 36 122 35 159 36 190 35 215 35 229 36 231 
35 222 36 197 35 159 36 108 35 44 35 -30 36 -108 35 -191 
36 -271 35 -345 35 -406 814 2082 116 MP stroke
DO
0 sg
3377 0 675 0 814 2082 3 MP stroke
SO
gr

0 sg
2290  232 mt 
(Impulse Response) s
2504 3196 mt 
(Time \(sec\)) s
 357 1854 mt  -90 rotate
(Amplitude) s
90 rotate

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
